/* A global list of all system calls available. */

#ifndef SYSCALL
#define SYSCALL(num, name, ...)
#endif

SYSCALL(0, exit)
SYSCALL(1, sigprocmask)
SYSCALL(2, sigsuspend)
SYSCALL(3, sigpending)
SYSCALL(4, sigaction)
SYSCALL(5, sigtimedwait)
SYSCALL(6, mmap)
SYSCALL(7, munmap)
SYSCALL(8, mprotect)
SYSCALL(9, execve)
SYSCALL(10, fork)
SYSCALL(11, kill)
SYSCALL(12, gettid)
SYSCALL(13, getpid)
SYSCALL(14, waitpid)
SYSCALL(15, read)
SYSCALL(16, write)
SYSCALL(17, seek)
SYSCALL(18, ioctl)
SYSCALL(19, openat)
SYSCALL(20, close)
SYSCALL(21, fstat)
SYSCALL(22, faccessat)
SYSCALL(23, fcntl)
SYSCALL(24, readdir)
SYSCALL(25, getcwd)
SYSCALL(26, chdir)
SYSCALL(27, fchdir)
SYSCALL(28, mkdirat)
SYSCALL(29, rename)
SYSCALL(30, chmodat)
SYSCALL(31, chownat)
SYSCALL(32, linkat)
SYSCALL(33, unlinkat)
SYSCALL(34, readlinkat)
SYSCALL(35, mount)
SYSCALL(36, unmount)
SYSCALL(37, setuid)
SYSCALL(38, getuid)
SYSCALL(39, setgid)
SYSCALL(40, getgid)
SYSCALL(41, umask)
SYSCALL(42, poll)
SYSCALL(43, chroot)
SYSCALL(44, futex_wait)
SYSCALL(45, futex_wake)
SYSCALL(46, socket)
SYSCALL(47, socketpair)
SYSCALL(48, bind)
SYSCALL(49, connect)
SYSCALL(50, accept)
SYSCALL(51, listen)
SYSCALL(52, getpeername)
SYSCALL(53, getsockname)
SYSCALL(54, getsockopt)
SYSCALL(55, setsockopt)
SYSCALL(56, recvmsg)
SYSCALL(57, sendmsg)
SYSCALL(58, sethostname)
SYSCALL(59, uname)
SYSCALL(60, archctl)
SYSCALL(61, readtimer)
SYSCALL(62, savetls)
