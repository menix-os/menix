use super::posix::errno::{EResult, Errno};

/// Executes the syscall as identified by `num`.
pub fn invoke(
    num: usize,
    _a0: usize,
    _a1: usize,
    _a2: usize,
    _a3: usize,
    _a4: usize,
    _a5: usize,
) -> (usize, usize) {
    let result: EResult<usize> = match num {
        numbers::EXIT => todo!(),
        numbers::SYSLOG => todo!(),
        numbers::UNAME => todo!(),
        numbers::ARCHCTL => todo!(),
        numbers::REBOOT => todo!(),
        numbers::MMAP => todo!(),
        numbers::MUNMAP => todo!(),
        numbers::MPROTECT => todo!(),
        numbers::MADVISE => todo!(),
        numbers::SIGPROCMASK => todo!(),
        numbers::SIGSUSPEND => todo!(),
        numbers::SIGPENDING => todo!(),
        numbers::SIGACTION => todo!(),
        numbers::SIGTIMEDWAIT => todo!(),
        numbers::SIGALTSTACK => todo!(),
        numbers::EXECVE => todo!(),
        numbers::FORK => todo!(),
        numbers::KILL => todo!(),
        numbers::GETTID => todo!(),
        numbers::GETPID => todo!(),
        numbers::GETPPID => todo!(),
        numbers::WAITID => todo!(),
        numbers::WAITPID => todo!(),
        numbers::READ => todo!(),
        numbers::PREAD => todo!(),
        numbers::WRITE => todo!(),
        numbers::PWRITE => todo!(),
        numbers::SEEK => todo!(),
        numbers::IOCTL => todo!(),
        numbers::OPENAT => todo!(),
        numbers::CLOSE => todo!(),
        numbers::STAT => todo!(),
        numbers::FSTAT => todo!(),
        numbers::STATVFS => todo!(),
        numbers::FSTATVFS => todo!(),
        numbers::FACCESSAT => todo!(),
        numbers::FCNTL => todo!(),
        numbers::FTRUNCATE => todo!(),
        numbers::FALLOCATE => todo!(),
        numbers::UTIMENSAT => todo!(),
        numbers::PSELECT => todo!(),
        numbers::MKNODAT => todo!(),
        numbers::READDIR => todo!(),
        numbers::GETCWD => todo!(),
        numbers::CHDIR => todo!(),
        numbers::FCHDIR => todo!(),
        numbers::MKDIRAT => todo!(),
        numbers::RMDIRAT => todo!(),
        numbers::GETDENTS => todo!(),
        numbers::RENAMEAT => todo!(),
        numbers::FCHMOD => todo!(),
        numbers::FCHMODAT => todo!(),
        numbers::FCHOWNAT => todo!(),
        numbers::LINKAT => todo!(),
        numbers::SYMLINKAT => todo!(),
        numbers::UNLINKAT => todo!(),
        numbers::READLINKAT => todo!(),
        numbers::FLOCK => todo!(),
        numbers::POLL => todo!(),
        numbers::DUP => todo!(),
        numbers::DUP3 => todo!(),
        numbers::SYNC => todo!(),
        numbers::FSYNC => todo!(),
        numbers::FDATASYNC => todo!(),
        numbers::GETGROUPS => todo!(),
        numbers::SETGROUPS => todo!(),
        numbers::GETSID => todo!(),
        numbers::SETSID => todo!(),
        numbers::SETUID => todo!(),
        numbers::GETUID => todo!(),
        numbers::SETGID => todo!(),
        numbers::GETGID => todo!(),
        numbers::GETEUID => todo!(),
        numbers::SETEUID => todo!(),
        numbers::GETEGID => todo!(),
        numbers::SETEGID => todo!(),
        numbers::GETPGID => todo!(),
        numbers::SETPGID => todo!(),
        numbers::GETRESUID => todo!(),
        numbers::SETRESUID => todo!(),
        numbers::GETRESGID => todo!(),
        numbers::SETRESGID => todo!(),
        numbers::SETREUID => todo!(),
        numbers::SETREGID => todo!(),
        numbers::UMASK => todo!(),
        numbers::PIPE => todo!(),
        numbers::FUTEX_WAIT => todo!(),
        numbers::FUTEX_WAKE => todo!(),
        numbers::THREAD_CREATE => todo!(),
        numbers::THREAD_KILL => todo!(),
        numbers::THREAD_EXIT => todo!(),
        numbers::THREAD_SETNAME => todo!(),
        numbers::THREAD_GETNAME => todo!(),
        numbers::TIMER_CREATE => todo!(),
        numbers::TIMER_SET => todo!(),
        numbers::TIMER_DELETE => todo!(),
        numbers::ITIMER_GET => todo!(),
        numbers::ITIMER_SET => todo!(),
        numbers::CLOCK_GET => todo!(),
        numbers::CLOCK_GETRES => todo!(),
        numbers::SLEEP => todo!(),
        numbers::YIELD => todo!(),
        numbers::CHROOT => todo!(),
        numbers::MOUNT => todo!(),
        numbers::UMOUNT => todo!(),
        numbers::SWAPON => todo!(),
        numbers::SWAPOFF => todo!(),
        numbers::SOCKET => todo!(),
        numbers::SOCKETPAIR => todo!(),
        numbers::SHUTDOWN => todo!(),
        numbers::BIND => todo!(),
        numbers::CONNECT => todo!(),
        numbers::ACCEPT => todo!(),
        numbers::LISTEN => todo!(),
        numbers::GETPEERNAME => todo!(),
        numbers::GETSOCKNAME => todo!(),
        numbers::GETSOCKOPT => todo!(),
        numbers::SETSOCKOPT => todo!(),
        numbers::SENDMSG => todo!(),
        numbers::SENDTO => todo!(),
        numbers::RECVMSG => todo!(),
        numbers::RECVFROM => todo!(),
        numbers::GETHOSTNAME => todo!(),
        numbers::SETHOSTNAME => todo!(),
        numbers::GETENTROPY => todo!(),
        numbers::GETRUSAGE => todo!(),
        numbers::GETRLIMIT => todo!(),
        numbers::SETRLIMIT => todo!(),
        numbers::GETPRIORITY => todo!(),
        numbers::SETPRIORITY => todo!(),
        numbers::SCHED_GETPARAM => todo!(),
        numbers::SCHED_SETPARAM => todo!(),
        numbers::GETCPU => todo!(),
        numbers::SYSINFO => todo!(),
        numbers::PTRACE => todo!(),
        _ => {
            log!("Unknown syscall {:#x} requested by user program", num);
            Err(Errno::ENOSYS)
        }
    };

    match result {
        Ok(x) => return (x, 0),
        Err(x) => return (0, x as usize),
    }
}

mod numbers {
    pub const EXIT: usize = 0;
    pub const SYSLOG: usize = 1;
    pub const UNAME: usize = 2;
    pub const ARCHCTL: usize = 3;
    pub const REBOOT: usize = 4;
    pub const MMAP: usize = 5;
    pub const MUNMAP: usize = 6;
    pub const MPROTECT: usize = 7;
    pub const MADVISE: usize = 8;
    pub const SIGPROCMASK: usize = 9;
    pub const SIGSUSPEND: usize = 10;
    pub const SIGPENDING: usize = 11;
    pub const SIGACTION: usize = 12;
    pub const SIGTIMEDWAIT: usize = 13;
    pub const SIGALTSTACK: usize = 14;
    pub const EXECVE: usize = 15;
    pub const FORK: usize = 16;
    pub const KILL: usize = 17;
    pub const GETTID: usize = 18;
    pub const GETPID: usize = 19;
    pub const GETPPID: usize = 20;
    pub const WAITID: usize = 21;
    pub const WAITPID: usize = 22;
    pub const READ: usize = 23;
    pub const PREAD: usize = 24;
    pub const WRITE: usize = 25;
    pub const PWRITE: usize = 26;
    pub const SEEK: usize = 27;
    pub const IOCTL: usize = 28;
    pub const OPENAT: usize = 29;
    pub const CLOSE: usize = 30;
    pub const STAT: usize = 31;
    pub const FSTAT: usize = 32;
    pub const STATVFS: usize = 33;
    pub const FSTATVFS: usize = 34;
    pub const FACCESSAT: usize = 35;
    pub const FCNTL: usize = 36;
    pub const FTRUNCATE: usize = 37;
    pub const FALLOCATE: usize = 38;
    pub const UTIMENSAT: usize = 39;
    pub const PSELECT: usize = 40;
    pub const MKNODAT: usize = 41;
    pub const READDIR: usize = 42;
    pub const GETCWD: usize = 43;
    pub const CHDIR: usize = 44;
    pub const FCHDIR: usize = 45;
    pub const MKDIRAT: usize = 46;
    pub const RMDIRAT: usize = 47;
    pub const GETDENTS: usize = 48;
    pub const RENAMEAT: usize = 49;
    pub const FCHMOD: usize = 50;
    pub const FCHMODAT: usize = 51;
    pub const FCHOWNAT: usize = 52;
    pub const LINKAT: usize = 53;
    pub const SYMLINKAT: usize = 54;
    pub const UNLINKAT: usize = 55;
    pub const READLINKAT: usize = 56;
    pub const FLOCK: usize = 57;
    pub const POLL: usize = 58;
    pub const DUP: usize = 59;
    pub const DUP3: usize = 60;
    pub const SYNC: usize = 61;
    pub const FSYNC: usize = 62;
    pub const FDATASYNC: usize = 63;
    pub const GETGROUPS: usize = 64;
    pub const SETGROUPS: usize = 65;
    pub const GETSID: usize = 66;
    pub const SETSID: usize = 67;
    pub const SETUID: usize = 68;
    pub const GETUID: usize = 69;
    pub const SETGID: usize = 70;
    pub const GETGID: usize = 71;
    pub const GETEUID: usize = 72;
    pub const SETEUID: usize = 73;
    pub const GETEGID: usize = 74;
    pub const SETEGID: usize = 75;
    pub const GETPGID: usize = 76;
    pub const SETPGID: usize = 77;
    pub const GETRESUID: usize = 78;
    pub const SETRESUID: usize = 79;
    pub const GETRESGID: usize = 80;
    pub const SETRESGID: usize = 81;
    pub const SETREUID: usize = 82;
    pub const SETREGID: usize = 83;
    pub const UMASK: usize = 84;
    pub const PIPE: usize = 85;
    pub const FUTEX_WAIT: usize = 86;
    pub const FUTEX_WAKE: usize = 87;
    pub const THREAD_CREATE: usize = 88;
    pub const THREAD_KILL: usize = 89;
    pub const THREAD_EXIT: usize = 90;
    pub const THREAD_SETNAME: usize = 91;
    pub const THREAD_GETNAME: usize = 92;
    pub const TIMER_CREATE: usize = 93;
    pub const TIMER_SET: usize = 94;
    pub const TIMER_DELETE: usize = 95;
    pub const ITIMER_GET: usize = 96;
    pub const ITIMER_SET: usize = 97;
    pub const CLOCK_GET: usize = 98;
    pub const CLOCK_GETRES: usize = 99;
    pub const SLEEP: usize = 100;
    pub const YIELD: usize = 101;
    pub const CHROOT: usize = 102;
    pub const MOUNT: usize = 103;
    pub const UMOUNT: usize = 104;
    pub const SWAPON: usize = 105;
    pub const SWAPOFF: usize = 106;
    pub const SOCKET: usize = 107;
    pub const SOCKETPAIR: usize = 108;
    pub const SHUTDOWN: usize = 109;
    pub const BIND: usize = 110;
    pub const CONNECT: usize = 111;
    pub const ACCEPT: usize = 112;
    pub const LISTEN: usize = 113;
    pub const GETPEERNAME: usize = 114;
    pub const GETSOCKNAME: usize = 115;
    pub const GETSOCKOPT: usize = 116;
    pub const SETSOCKOPT: usize = 117;
    pub const SENDMSG: usize = 118;
    pub const SENDTO: usize = 119;
    pub const RECVMSG: usize = 120;
    pub const RECVFROM: usize = 121;
    pub const GETHOSTNAME: usize = 122;
    pub const SETHOSTNAME: usize = 123;
    pub const GETENTROPY: usize = 124;
    pub const GETRUSAGE: usize = 125;
    pub const GETRLIMIT: usize = 126;
    pub const SETRLIMIT: usize = 127;
    pub const GETPRIORITY: usize = 128;
    pub const SETPRIORITY: usize = 129;
    pub const SCHED_GETPARAM: usize = 130;
    pub const SCHED_SETPARAM: usize = 131;
    pub const GETCPU: usize = 132;
    pub const SYSINFO: usize = 133;
    pub const PTRACE: usize = 134;
}
